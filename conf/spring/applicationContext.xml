<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.1.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd">

	
	
    <!--  数据源配置 -->
    <bean id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${db.driverClassName}" />
		<property name="url" value="${db.url}" />
		<property name="username" value="${db.username}" />
		<property name="password" value="${db.password}" />
		<property name="maxActive" value="${dataSource.maxActive}" />
		<property name="maxIdle" value="${dataSource.maxIdle}" />
		<property name="minIdle" value="${dataSource.minIdle}" />
		<property name="maxWait" value="${dataSource.maxWait}" />
		<property name="defaultAutoCommit"
			value="${dataSource.defaultAutoCommit}" />
		<property name="removeAbandoned"
			value="${dataSource.removeAbandoned}" />
		<property name="removeAbandonedTimeout"
			value="${dataSource.removeAbandonedTimeout}" />
		<property name="logAbandoned"
			value="${dataSource.logAbandoned}" />			
		<property name= "testWhileIdle" value="${dataSource.testWhileIdle}" />
        <property name= "testOnBorrow" value="${dataSource.testOnBorrow}" />
        <property name= "testOnReturn" value="${dataSource.testOnReturn}" />
        <property name= "validationQuery" value="SELECT COUNT(1) FROM DUAL" />
        <property name= "timeBetweenEvictionRunsMillis" value="30000" />
        <property name= "numTestsPerEvictionRun" value="${dataSource.maxActive}" />
        <property name= "minEvictableIdleTimeMillis" value="1800000" />
	</bean>
	
	<!-- 这里配置数据库properties文件位置 -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
		    <list>
			    <value>classpath:jdbc.properties</value>
			</list>
		</property>
	</bean>
	
	
		
  <bean id="nativeJdbcExtractor"
		class="org.springframework.jdbc.support.nativejdbc.CommonsDbcpNativeJdbcExtractor"
		lazy-init="true" />
	<!-- Oracle的BLOB、CLOB字段处理类 -->
	<bean id="oracleLobHandler" class="org.springframework.jdbc.support.lob.OracleLobHandler"
		lazy-init="true">
		<property name="nativeJdbcExtractor" ref="nativeJdbcExtractor" />
	</bean><!--
	
	<context:annotation-config />
	 使用annotation 自动注册bean,并保证@Required,@Autowired的属性被注入 
	
    <aop:aspectj-autoproxy proxy-target-class="true" />
    
    
    -->
     <context:component-scan base-package="com.epmis" />
     <context:component-scan base-package="com.jp" />

   	<!-- SpringContextHandler定义 --> 
	<bean id="springContextHolder" class="com.epmis.sys.util.SpringContextHolder" lazy-init="false"  /> 
   
	 <import resource="applicationContext-hibernate.xml" /> 
	 <import resource="applicationContext-jdbc.xml" /> 
	

 </beans>