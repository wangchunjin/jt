<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" version="2.5">
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>
			classpath:spring/applicationContext.xml
		</param-value>
  </context-param>
  <filter>
    <filter-name>character</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <init-param>
      <param-name>encode</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>character</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
  <listener>
    <listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
  </listener>
  <filter>
    <filter-name>encodingFilter</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
    <init-param>
      <param-name>forceEncoding</param-name>
      <param-value>true</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>encodingFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
  <filter>
    <filter-name>hibernateOpenSessionInViewFilter</filter-name>
    <filter-class>
			org.springframework.orm.hibernate4.support.OpenSessionInViewFilter</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>hibernateOpenSessionInViewFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
  <servlet>
    <servlet-name>Upload</servlet-name>
    <servlet-class>com.epmis.km.web.KmUpload</servlet-class>
  </servlet>
  <servlet-mapping>
    <servlet-name>Upload</servlet-name>
    <url-pattern>/servlet/Upload</url-pattern>
  </servlet-mapping>
  <servlet>
    <servlet-name>BBUpload</servlet-name>
    <servlet-class>com.epmis.km.web.BBUpload</servlet-class>
  </servlet>
  <servlet-mapping>
    <servlet-name>BBUpload</servlet-name>
    <url-pattern>/servlet/BBUpload</url-pattern>
  </servlet-mapping>
  <servlet>
    <servlet-name>HHUpload</servlet-name>
    <servlet-class>com.epmis.km.web.HHUpload</servlet-class>
  </servlet>
  <servlet-mapping>
    <servlet-name>HHUpload</servlet-name>
    <url-pattern>/servlet/HHUpload</url-pattern>
  </servlet-mapping>
  <filter>
    <filter-name>StrutsPrepareFilter</filter-name>
    <filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareFilter</filter-class>
  </filter>
  <filter>
    <filter-name>struts2</filter-name>
    <filter-class>com.epmis.sys.util.JspFilter</filter-class>
  </filter>
  <filter>
    <filter-name>StrutsExecuteFilter</filter-name>
    <filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsExecuteFilter</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>StrutsPrepareFilter</filter-name>
    <url-pattern>*.action</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>StrutsPrepareFilter</filter-name>
    <url-pattern>/web/*</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>struts2</filter-name>
    <url-pattern>*.action</url-pattern>
    <dispatcher>REQUEST</dispatcher>
    <dispatcher>FORWARD</dispatcher>
  </filter-mapping>
  <filter-mapping>
    <filter-name>struts2</filter-name>
    <url-pattern>*.jsp</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>StrutsExecuteFilter</filter-name>
    <url-pattern>*.action</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>StrutsExecuteFilter</filter-name>
    <url-pattern>/web/*</url-pattern>
  </filter-mapping>
  <listener>
    <listener-class>com.epmis.sys.listen.TaskListener</listener-class>
  </listener>
  <listener>
    <listener-class>com.epmis.app.listen.TaskListener</listener-class>
  </listener>
  <servlet>
    <servlet-name>LoadServlet</servlet-name>
    <servlet-class>com.epmis.sys.web.LoadServlet</servlet-class>
    <load-on-startup>0</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>LoadServlet</servlet-name>
    <url-pattern>/servlet/LoadServlet</url-pattern>
  </servlet-mapping>
  <mime-mapping>
    <extension>pdf</extension>
    <mime-type>application/pdf</mime-type>
  </mime-mapping>
  <welcome-file-list>
    <welcome-file>/login.jsp</welcome-file>
  </welcome-file-list>
  <servlet>
    <servlet-name>enterprise</servlet-name>
    <servlet-class>com.epmis.sys_ent.web.InitEnt</servlet-class>
  </servlet>
  <servlet-mapping>
    <servlet-name>enterprise</servlet-name>
    <url-pattern>/ent</url-pattern>
  </servlet-mapping>
  <session-config>
    <session-timeout>300</session-timeout>
  </session-config>
  <servlet>
    <servlet-name>spring</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
  </servlet>
  <servlet-mapping>
    <servlet-name>spring</servlet-name>
    <url-pattern>*.do</url-pattern>
  </servlet-mapping>
</web-app>